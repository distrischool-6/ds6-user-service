# ===============================================
# SPRING BOOT APPLICATION CONFIGURATION
# ===============================================
# Nome da aplicação para identificação em logs, monitoramento, etc.
spring.application.name=user-service


# ===============================================
# DATA SOURCE CONFIGURATION
# ===============================================
# Endereço do seu banco de dados PostgreSQL. As variáveis de ambiente são usadas para flexibilidade.
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:distrischool_users}
# Usuário do banco de dados, lido da variável de ambiente DB_USER.
spring.datasource.username=${DB_USER:postgres}
# Senha do banco de dados, lida da variável de ambiente DB_PASSWORD.
spring.datasource.password=${DB_PASSWORD:1234}


# ===============================================
# JPA & HIBERNATE CONFIGURATION
# ===============================================
# Dialeto específico do PostgreSQL para o Hibernate se comunicar corretamente
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Ação a ser tomada no schema do banco.
# 'validate' garante que o Flyway é a única fonte de verdade para o schema do BD.
spring.jpa.hibernate.ddl-auto=update

# Mostra o SQL gerado pelo Hibernate no console (ótimo para debug)
spring.jpa.show-sql=true


# ===============================================
# FLYWAY CONFIGURATION
# ===============================================
# Habilita o Flyway para rodar na inicialização da aplicação e gerenciar o schema do BD
spring.flyway.enabled=true
# Permite que o Flyway faça o baseline em schemas não vazios
spring.flyway.baseline-on-migrate=true
# Versão inicial do baseline
spring.flyway.baseline-version=1.0.0

# ===============================================
# JWT CONFIGURATION
# ===============================================
# Chave secreta para assinar os tokens JWT. DEVE ser uma string longa e complexa.
# Lida da variável de ambiente JWT_SECRET.
jwt.secret=${JWT_SECRET:6ABM8AgHqlaaQ/WDtQqJTQ6wO99YRXNRUhjJjVfbH+w=}
# Tempo de expiração do token em milissegundos (ex: 24 horas)
# Lido da variável de ambiente JWT_EXPIRATION.
jwt.expiration=${JWT_EXPIRATION:86400000}
